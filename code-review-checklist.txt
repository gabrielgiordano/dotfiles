Code Review Checklist:

  Code Design:
    Is it Dry?

    Is everything at the same abstraction level?
      Does everything in it change at the same rate?

    Has few dependencies?

    Single Responsability
      Does it have one responsability?

    Open Closed Principle

    Liskov Substitution Principle
      Design by Contract, respect class preconditions and postconditions

    Dependency Inversion Principle
      Does it depend on things that change less often than it does?

    Remove if's with polymorphism (Bonus: Why you should follow SRP!)
      https://www.youtube.com/watch?v=4F72VULWFvc

    Law of Demeter
      https://en.wikipedia.org/wiki/Law_of_Demeter

    Tell Don't Ask
      Eastward Code
        Always return self
        Objects may query themselves
        Factories are exempt
        Break the rules sparkling

    Connascence
      https://en.wikipedia.org/wiki/Connascence#Types_of_connascence

    Has high Cohesion?

    Has low Coupling?
